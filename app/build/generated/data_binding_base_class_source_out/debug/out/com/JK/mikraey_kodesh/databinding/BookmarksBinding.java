// Generated by view binder compiler. Do not edit!
package com.JK.mikraey_kodesh.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.JK.mikraey_kodesh.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BookmarksBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ListView Bookmarkslist;

  @NonNull
  public final LinearLayout bookmarksLayout;

  @NonNull
  public final Button buttonDeleteAll;

  @NonNull
  public final TextView headerTextView;

  @NonNull
  public final TextView item;

  private BookmarksBinding(@NonNull LinearLayout rootView, @NonNull ListView Bookmarkslist,
      @NonNull LinearLayout bookmarksLayout, @NonNull Button buttonDeleteAll,
      @NonNull TextView headerTextView, @NonNull TextView item) {
    this.rootView = rootView;
    this.Bookmarkslist = Bookmarkslist;
    this.bookmarksLayout = bookmarksLayout;
    this.buttonDeleteAll = buttonDeleteAll;
    this.headerTextView = headerTextView;
    this.item = item;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BookmarksBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BookmarksBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bookmarks, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BookmarksBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Bookmarkslist;
      ListView Bookmarkslist = ViewBindings.findChildViewById(rootView, id);
      if (Bookmarkslist == null) {
        break missingId;
      }

      LinearLayout bookmarksLayout = (LinearLayout) rootView;

      id = R.id.buttonDeleteAll;
      Button buttonDeleteAll = ViewBindings.findChildViewById(rootView, id);
      if (buttonDeleteAll == null) {
        break missingId;
      }

      id = R.id.headerTextView;
      TextView headerTextView = ViewBindings.findChildViewById(rootView, id);
      if (headerTextView == null) {
        break missingId;
      }

      id = R.id.item;
      TextView item = ViewBindings.findChildViewById(rootView, id);
      if (item == null) {
        break missingId;
      }

      return new BookmarksBinding((LinearLayout) rootView, Bookmarkslist, bookmarksLayout,
          buttonDeleteAll, headerTextView, item);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
